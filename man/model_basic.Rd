% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/model_basic.R
\name{model_basic}
\alias{model_basic}
\title{Basic (radial) DEA model.}
\usage{
model_basic(datadea,
            dmu_eval = NULL,
            dmu_ref = NULL,
            orientation = c("io", "oo", "dir"),
            dir_input = NULL,
            dir_output = NULL,
            rts = c("crs", "vrs", "nirs", "ndrs", "grs"),
            L = 1,
            U = 1,
            maxslack = TRUE,
            weight_slack_i = 1,
            weight_slack_o = 1,
            vtrans_i = NULL,
            vtrans_o = NULL,
            compute_target = TRUE,
            compute_multiplier = FALSE,
            returnlp = FALSE,
            ...)
}
\arguments{
\item{datadea}{The data, including \code{n} DMUs, \code{m} inputs and \code{s} outputs.}

\item{dmu_eval}{A numeric vector containing which DMUs have to be evaluated.}

\item{dmu_ref}{A numeric vector containing which DMUs are the evaluation reference set.}

\item{orientation}{A string, equal to "io" (input oriented), "oo" (output oriented), or "dir" (directional).}

\item{dir_input}{A value, vector of length \code{m}, or matrix \code{m} x \code{ne} (where \code{ne} is the lenght of \code{dmu_eval}) with the input directions.
If \code{dir_input} == input matrix (of DMUS in \code{dmu_eval}) and \code{dir_output} == 0, it is equivalent to input oriented (\code{beta} = 1 - \code{efficiency}).
If \code{dir_input} is omitted, input matrix (of DMUS in \code{dmu_eval}) is assigned.}

\item{dir_output}{A value, vector of length \code{s}, or matrix \code{s} x \code{ne} (where \code{ne} is the lenght of \code{dmu_eval}) with the output directions.
If \code{dir_input} == 0 and \code{dir_output} == output matrix (of DMUS in \code{dmu_eval}), it is equivalent to output oriented (\code{beta} = \code{efficiency} - 1).
If \code{dir_output} is omitted, output matrix (of DMUS in \code{dmu_eval}) is assigned.}

\item{rts}{A string, determining the type of returns to scale, equal to "crs" (constant),
"vrs" (variable), "nirs" (non-increasing), "ndrs" (non-decreasing) or "grs" (generalized).}

\item{L}{Lower bound for the generalized returns to scale (grs).}

\item{U}{Upper bound for the generalized returns to scale (grs).}

\item{maxslack}{Logical. If it is \code{TRUE}, it computes the max slack solution.}

\item{weight_slack_i}{A value, vector of length \code{m}, or matrix \code{m} x \code{ne} (where \code{ne} is the lenght of \code{dmu_eval})
with the weights of the input slacks for the max slack solution.}

\item{weight_slack_o}{A value, vector of length \code{s}, or matrix \code{s} x \code{ne} (where \code{ne} is the lenght of \code{dmu_eval})
with the weights of the output slacks for the max slack solution.}

\item{vtrans_i}{Numeric vector of translation for undesirable inputs. If \code{vtrans_i[i]} is
\code{NA}, then it applies the "max + 1" translation to the i-th undesirable input. If \code{vtrans_i} is
a constant, then it applies the same translation to all undesirable inputs. If \code{vtrans_i} is \code{NULL},
then it applies the "max + 1" translation to all undesirable inputs.}

\item{vtrans_o}{Numeric vector of translation for undesirable outputs, analogous to
\code{vtrans_i}, but applied to outputs.}

\item{compute_target}{Logical. If it is \code{TRUE}, it computes targets of the max slack solution.}

\item{compute_multiplier}{Logical. If it is \code{TRUE}, it computes multipliers (dual solution) when \code{orientation} is "io" or "oo".}

\item{returnlp}{Logical. If it is \code{TRUE}, it returns the linear problems (objective function and constraints) of stage 1.}

\item{...}{Ignored, for compatibility issues.}
}
\description{
Solve input and output oriented basic DEA  models (envelopment form) under constant (CCR DEA model), variable (BCC DEA model), non-increasing, non-decreasing or generalized returns to scale. By default, models are solved in a two-stage process (DEA slacks are maximized).  
  
The model_basic function allows to treat with non-discretional, uncontrollable and undesirable inputs/outputs. 

Finally, you can use the \code{model_basic} function to solve directional DEA models by choosing \code{orientation} = "dir".
}
\note{
(1) With undesirable inputs/outputs, you should select vrs returns to scale in order to maintain translation invariance (Seiford y Zhu, 2002). If deaR detects that you are not specifying \code{rts} = "vrs", it makes the change to vrs automatically. 

(2) With undesirable inputs use input-oriented BCC model, and with undesirable outputs use output-oriented BCC model. Alternatively, you can also treat the undesirable outputs as inputs and the apply the input-oriented BCC model (similarly with undesirable inputs).
}
\examples{
# Example 1. Basic DEA model with desirable inputs/outputs.
# Replication of results in Charnes, Cooper and Rhodes (1981).
data("PFT1981") 
# Selecting DMUs in Program Follow Through (PFT)
PFT <- PFT1981[1:49, ] 
PFT <- read_data(PFT, 
                 dmus = 1, 
                 inputs = 2:6, 
                 outputs = 7:9 )
eval_pft <- model_basic(PFT, 
                        orientation = "io", 
                        rts = "crs")
eff <- efficiencies(eval_pft)
s <- slacks(eval_pft) 
lamb <- lambdas(eval_pft)
tar <- targets(eval_pft)
ref <- references(eval_pft) 
returns <- rts(eval_pft)

# Example 2. Basic DEA model with undesirable outputs.
# Replication of results in Hua and Bian (2007).
data("Hua_Bian_2007")
# The third output is an undesirable output.
data_example <- read_data(Hua_Bian_2007, 
                          ni = 2,
                          no = 3, 
                          ud_outputs = 3) 
# Translation parameter (vtrans_o) is set to 1500                          
result <- model_basic(data_example, 
                      orientation = "oo", 
                      rts = "vrs", 
                      vtrans_o = 1500) 
eff <- efficiencies(result)
1 / eff # results M5 in Table 6-5 (p.119)

# Example 3. Basic DEA model with non-discretionary (fixed) inputs.
# Replication of results in Ruggiero (2007).
data("Ruggiero2007") 
# The second input is a non-discretionary input.
datadea <- read_data(Ruggiero2007, 
                     ni = 2, no = 1, 
                     nd_inputs = 2) 
result <- model_basic(datadea,
                      orientation = "io", 
                      rts = "crs")
efficiencies(result)
 
}
\references{
Charnes, A.; Cooper, W.W.; Rhodes, E. (1978). “Measuring the efficiency of decision making units”, European Journal of Operational Research 2, 429–444. \url{https://doi.org/10.1016/0377-2217(78)90138-8}  

Charnes, A.; Cooper, W.W.; Rhodes, E. (1979). “Short communication: Measuring the efficiency of decision making units”, European Journal of Operational Research 3, 339. \url{https://doi.org/10.1016/0377-2217(79)90229-7}  

Banker, R.; Charnes, A.; Cooper, W.W. (1984). “Some Models for Estimating Technical and Scale Inefficiencies in Data Envelopment Analysis”, Management Science; 30; 1078-1092. \url{https://www.jstor.org/stable/2631725}  

Undesirable inputs/outputs: 

Pastor, J.T. (1996). "Translation Invariance in Data Envelopment Analysis: a Generalization", Annals of Operations Research, 66(2), 91-102. \url{https://doi.org/10.1007/BF02187295}

Seiford, L.M.; Zhu, J. (2002). “Modeling undesirable factors in efficiency evaluation”, European Journal of Operational Research 142, 16-20. \url{https://doi.org/10.1016/S0377-2217(01)00293-4}  

Hua Z.; Bian Y. (2007). DEA with Undesirable Factors. In: Zhu J., Cook W.D. (eds) Modeling Data Irregularities and Structural Complexities in Data Envelopment Analysis. Springer, Boston, MA. \url{https://doi.org/10.1007/978-0-387-71607-7_6}

Non-discretionary/Non-controllable inputs/outputs:  
  
Banker, R.; Morey, R. (1986). “Efficiency Analysis for Exogenously Fixed Inputs and Outputs”, Operations Research; 34; 513-521. \url{https://doi.org/10.1287/opre.34.4.513}  

Ruggiero J. (2007). Non-Discretionary Inputs. In: Zhu J., Cook W.D. (eds) Modeling Data Irregularities and Structural Complexities in Data Envelopment Analysis. Springer, Boston, MA. \url{https://doi.org/10.1007/978-0-387-71607-7_5}  

Directional DEA model:  

Chambers, R.G.; Chung, Y.; Färe, R. (1996). "Benefit and Distance Functions", Journal of Economic Theory, 70(2), 407-419. \url{https://doi.org/10.1006/jeth.1996.0096}

Chambers, R.G.; Chung, Y.; Färe, R. (1998). "Profit Directional Distance Functions and Nerlovian Efficiency", Journal of Optimization Theory and Applications, 95, 351-354.
}
\seealso{
\code{\link{model_multiplier}}, \code{\link{model_supereff}}
}
\author{
\strong{Vicente Coll-Serrano} (\email{vicente.coll@uv.es}).
\emph{Quantitative Methods for Measuring Culture (MC2). Applied Economics.}

\strong{Vicente Bolós} (\email{vicente.bolos@uv.es}).
\emph{Department of Business Mathematics}

\strong{Rafael Benítez} (\email{rafael.suarez@uv.es}).
\emph{Department of Business Mathematics}

University of Valencia (Spain)
}
